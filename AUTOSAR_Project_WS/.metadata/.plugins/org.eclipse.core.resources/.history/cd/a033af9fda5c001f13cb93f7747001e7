/*
 ============================================================================
 Name        : Port_PBcfg.h
 Module Name : Port
 Author      : Ahmed Ali
 Date        : 12 Aug. 2024
 Description : Post Build Configuration Header file for TM4C123GH6PM Microcontroller - Port Driver
 ============================================================================
 */

#ifndef PORT_PBCFG_H_
#define PORT_PBCFG_H_

/*
 * Module Version 1.0.0
 */
#define PORT_PBCFG_SW_MAJOR_VERSION                 (1U)
#define PORT_PBCFG_SW_MINOR_VERSION                 (0U)
#define PORT_PBCFG_SW_PATCH_VERSION                 (0U)

/*
 * AUTOSAR Version 4.0.3
 */
#define PORT_PBCFG_AR_RELEASE_MAJOR_VERSION         (4U)
#define PORT_PBCFG_AR_RELEASE_MINOR_VERSION         (0U)
#define PORT_PBCFG_AR_RELEASE_PATCH_VERSION         (3U)

/* Type definition for Port_PinLevel_ValueType used by the Port APIs */
typedef enum
{
    PORT_PIN_LEVEL_LOW, PORT_PIN_LEVEL_HIGH
} Port_PinLevel_ValueType;

/* Type definition for Port_PinDirectionChangeableType used by the Port APIs */
typedef enum
{
    PORT_PIN_DIRECTION_CHANGEABLE_OFF, PORT_PIN_DIRECTION_CHANGEABLE_ON
} Port_PinDirectionChangeableType;

/* Type definition for Port_PinModeChangeableType used by the Port APIs */
typedef enum
{
    PORT_PIN_MODE_CHANGEABLE_OFF, PORT_PIN_MODE_CHANGEABLE_ON
} Port_PinModeChangeableType;

/* Type definition for Port_InternalResistorType used by the Port APIs */
typedef enum
{
    PORT_INTERNAL_RESISTOR_OFF, PORT_INTERNAL_RESISTOR_PULL_UP, PORT_INTERNAL_RESISTOR_PULL_DOWN
} Port_InternalResistorType;

/* Type definition for Port_PinModeType used by the Port APIs */
typedef enum
{
    PORT_PIN_MODE_DIO, PORT_PIN_MODE_ALT1, PORT_PIN_MODE_ALT2, PORT_PIN_MODE_ALT3, PORT_PIN_MODE_ALT4, PORT_PIN_MODE_ALT5, PORT_PIN_MODE_ALT6, PORT_PIN_MODE_ALT7, PORT_PIN_MODE_ALT8, PORT_PIN_MODE_ALT9, PORT_PIN_MODE_ALT14 = 14, PORT_PIN_MODE_AIN
} Port_PinMode;

/* Type definition for structure which hold the initialization parameter for port module */
typedef struct
{
    /* Member contains the ID of the Port that this Pin belongs to */
    Port_Type Port_Num;

    /* Member contains the ID of the Pin */
    Port_PinType Pin_Num;

    /* Member contains the direction of the Pin */
    Port_PinDirectionType Pin_Direction;

    /* Member contains the internal resistor option of the Pin (in case input pin) */
    Port_InternalResistorType Pin_InternalResistor;

    /* Member contains the initial value option of the Pin (in case output pin) */
    Port_PinLevel_ValueType Pin_InitialValue;

    /* Member contains the mode of the Pin */
    Port_PinModeType Pin_Mode;

    /* Member contains the direction change option of the Pin */
    Port_PinDirectionChangeableType Pin_DirectionChange;

    /* Member contains the mode change option of the Pin */
    Port_PinModeChangeableType Pin_ModeChange;
} Port_ConfigPinType;

/* Data structure containing the initialization data for Port module. */
typedef struct Port_ConfigType
{
    Port_ConfigPinType Pins[PORT_NUMBER_OF_PORT_PINS];
} Port_ConfigType;

/*******************************************************************************
 *                       External Variables                                    *
 *******************************************************************************/

/* Extern PB structures to be used by Port and other modules */
extern const Port_ConfigType Port_Configuration;

#endif /* PORT_PBCFG_H_ */
